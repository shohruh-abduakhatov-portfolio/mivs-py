import unittest

import numpy as np


class MyTestCase(unittest.TestCase):
    def test_something(self):

        a = np.array([[[[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]]],
                      [[[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]]],
                      [[[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]]],
                      [[[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]]],
                      [[[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]]],
                      [[[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]]],
                      [[[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]],
                       [[0], [0]]]])

        a2 = np.full(shape=(7, 17, 2, 1), fill_value=0)
        a3 = np.array([[[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]]],
                       [[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]]],
                       [[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]]],
                       [[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]]],
                       [[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]]],
                       [[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]]],
                       [[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]],
                        [[0], [0]]]])
        q = 0
        for i in range(len(a)):
            for j in range(len(a[0])):
                for k in range(len(a[0][0])):
                    a2[i][j][k] = q
                    a3[i][j][k] = q
                    a[i][j][k] = q
                    q += 1

        self.assertListEqual(a2.tolist(), a3.tolist(), a.tolist())
        # self.assertEqual(a2, a3)
        # self.assertEqual(a2, a)
        # self.assertEqual(a, a3)


if __name__ == '__main__':
    unittest.main()
