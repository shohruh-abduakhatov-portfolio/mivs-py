import asyncio

from src import mc_mics_v2_test as mc_mivs


def main():
    product = [11356, 14138, 11836, 10741, 19496, 19525, 9691, 12750, 14634, 13456, 10962]
    drug_qnty_req = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 300]
    min_sum_per_supplier = [0, 0, 0, 0, 0]
    input_capital = 701_152_500
    cash = int(201_152_500)
    perech = input_capital - cash  # 500_000_000
    supplier = [5, 14, 12, 2, 7]
    cash_cost = [[701152500, 701152500, 701152500, 701152500, 701152500],
                 [701152500, 701152500, 701152500, 701152500, 701152500],
                 [701152500, 701152500, 701152500, 701152500, 701152500],
                 [701152500, 701152500, 701152500, 701152500, 701152500],
                 [701152500, 701152500, 701152500, 701152500, 701152500],
                 [701152500, 701152500, 701152500, 701152500, 701152500],
                 [701152500, 701152500, 701152500, 701152500, 701152500],
                 [701152500, 701152500, 701152500, 701152500, 701152500],
                 [701152500, 701152500, 701152500, 701152500, 701152500],
                 [701152500, 701152500, 701152500, 701152500, 701152500],
                 [701152500, 701152500, 701152500, 701152500, 701152500]]

    pred_100 = [[701152500, 701152500, 55981, 701152500, 701152500],
                [701152500, 701152500, 701152500, 701152500, 30576],
                [701152500, 10151, 9600, 9573, 701152500],
                [701152500, 37499, 39332, 701152500, 701152500],
                [701152500, 26159, 701152500, 701152500, 701152500],
                [701152500, 5656, 701152500, 701152500, 701152500],
                [701152500, 101636, 104778, 701152500, 701152500],
                [1360, 701152500, 701152500, 701152500, 701152500],
                [701152500, 701152500, 20800, 701152500, 701152500],
                [701152500, 105064, 701152500, 701152500, 701152500],
                [701152500, 701152500, 582, 701152500, 701152500]]

    pred_50 = [[701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500]]

    pred_25 = [[701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500],
               [701152500, 701152500, 701152500, 701152500, 701152500]]
    prices_title = ["cash_cost", ["pred_100", "pred_50", "pred_25"]]

    result = mc_mivs.main(product,
                          drug_qnty_req,
                          input_capital,
                          cash,
                          perech,
                          supplier,
                          cash_cost,
                          pred_100,
                          pred_50,
                          pred_25,
                          prices_title,
                          min_sum_per_supplier=min_sum_per_supplier)

    # print("result: \n>>>", result)
    # print("_Execution Time: ", time() - start, ' (secs)')


if __name__ == '__main__':
    # loop = asyncio.get_event_loop()
    # loop.run_until_complete(main())
    main()
